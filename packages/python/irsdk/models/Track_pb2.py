# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: Track.proto
# Protobuf Python Version: 4.25.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0bTrack.proto\x12\x13IRacingTools.Models\"\x86\x02\n\x05Track\x12\n\n\x02id\x18\x01 \x01(\x05\x12\x0c\n\x04name\x18\x02 \x01(\t\x12,\n\x04type\x18\x03 \x01(\x0e\x32\x1e.IRacingTools.Models.TrackType\x12\x14\n\x0c\x64isplay_name\x18\x05 \x01(\t\x12\x1a\n\x12\x64isplay_short_name\x18\x06 \x01(\t\x12\x10\n\x08\x61ltitude\x18\n \x01(\x01\x12\x10\n\x08latitude\x18\x0b \x01(\x01\x12\x11\n\tlongitude\x18\x0c \x01(\x01\x12\x14\n\x0cnorth_offset\x18\x0f \x01(\t\x12\x0f\n\x07\x63ountry\x18\x14 \x01(\t\x12\x0c\n\x04\x63ity\x18\x15 \x01(\t\x12\x17\n\x0fpit_speed_limit\x18\x32 \x01(\x05\"\x88\x01\n\x0bTrackConfig\x12\n\n\x02id\x18\x01 \x01(\t\x12\x10\n\x08track_id\x18\x02 \x01(\x05\x12\x0c\n\x04name\x18\x05 \x01(\t\x12\x0e\n\x06length\x18\n \x01(\t\x12\x17\n\x0flength_official\x18\x0b \x01(\t\x12\x11\n\tnum_turns\x18\x0f \x01(\x05\x12\x11\n\tdirection\x18\x10 \x01(\t*5\n\tTrackType\x12\x13\n\x0fTRACK_TYPE_ROAD\x10\x00\x12\x13\n\x0fTRACK_TYPE_OVAL\x10\x01\x62\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'Track_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
  DESCRIPTOR._options = None
  _globals['_TRACKTYPE']._serialized_start=440
  _globals['_TRACKTYPE']._serialized_end=493
  _globals['_TRACK']._serialized_start=37
  _globals['_TRACK']._serialized_end=299
  _globals['_TRACKCONFIG']._serialized_start=302
  _globals['_TRACKCONFIG']._serialized_end=438
# @@protoc_insertion_point(module_scope)
