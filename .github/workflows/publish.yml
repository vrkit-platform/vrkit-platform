name: App Build

on:
  workflow_dispatch:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]


#permissions:
#  contents: read

jobs:
  build:
    name: ${{ matrix.os }}-${{ github.workflow }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [  windows-latest ]
        include:
          - os: windows-latest
            triplet: x64-windows-static
            vcpkgCommitId: '47bf3d1ac192b3fa0feb6e6ac9c845de179eebe9'
    env:
      # Path to the solution file relative to the root of the project.
      VCPKG_DEFAULT_TRIPLET: ${{ matrix.triplet }}
      VCPKG_ROOT: ${{ github.workspace }}/vcpkg

      # Configuration type to build.
      # You can convert this to a build matrix if you need coverage of multiple configuration types.
      # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
      BUILD_PLATFORM: x64
      BUILD_CONFIGURATION: Debug

    steps:
      - uses: actions/checkout@v3

      - name: get-cmake
        uses: lukka/get-cmake@v3.31.5

      - name: Run vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          # Just install vcpkg for now, do not install any ports in this step yet.
          runVcpkgInstall: false

          # Location of the vcpkg as submodule of the repository.
          vcpkgDirectory: '${{ github.workspace }}/vcpkg'
          vcpkgGitCommitId: '${{ matrix.vcpkgCommitId }}'
          vcpkgJsonGlob: '**/vcpkg.json'

      - name: 'Run CMake with Ninja, install dependencies with vcpkg, build with CMake'
        uses: lukka/run-cmake@v10
        with:
          configurePreset: 'ninja'
          buildPreset: 'ninja-release-preset'
          # buildDirectory: '${{ github.workspace }}/build/release'
          cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'

