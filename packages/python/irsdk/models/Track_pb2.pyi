"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _TrackType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _TrackTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_TrackType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    TRACK_TYPE_ROAD: _TrackType.ValueType  # 0
    TRACK_TYPE_OVAL: _TrackType.ValueType  # 1

class TrackType(_TrackType, metaclass=_TrackTypeEnumTypeWrapper): ...

TRACK_TYPE_ROAD: TrackType.ValueType  # 0
TRACK_TYPE_OVAL: TrackType.ValueType  # 1
global___TrackType = TrackType

@typing.final
class Track(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    DISPLAY_SHORT_NAME_FIELD_NUMBER: builtins.int
    ALTITUDE_FIELD_NUMBER: builtins.int
    LATITUDE_FIELD_NUMBER: builtins.int
    LONGITUDE_FIELD_NUMBER: builtins.int
    NORTH_OFFSET_FIELD_NUMBER: builtins.int
    COUNTRY_FIELD_NUMBER: builtins.int
    CITY_FIELD_NUMBER: builtins.int
    PIT_SPEED_LIMIT_FIELD_NUMBER: builtins.int
    id: builtins.int
    """WeekendInfo::trackID"""
    name: builtins.str
    """WeekendInfo::trackName"""
    type: global___TrackType.ValueType
    """WeekendInfo::trackType"""
    display_name: builtins.str
    display_short_name: builtins.str
    altitude: builtins.float
    latitude: builtins.float
    longitude: builtins.float
    north_offset: builtins.str
    country: builtins.str
    city: builtins.str
    pit_speed_limit: builtins.int
    def __init__(
        self,
        *,
        id: builtins.int = ...,
        name: builtins.str = ...,
        type: global___TrackType.ValueType = ...,
        display_name: builtins.str = ...,
        display_short_name: builtins.str = ...,
        altitude: builtins.float = ...,
        latitude: builtins.float = ...,
        longitude: builtins.float = ...,
        north_offset: builtins.str = ...,
        country: builtins.str = ...,
        city: builtins.str = ...,
        pit_speed_limit: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["altitude", b"altitude", "city", b"city", "country", b"country", "display_name", b"display_name", "display_short_name", b"display_short_name", "id", b"id", "latitude", b"latitude", "longitude", b"longitude", "name", b"name", "north_offset", b"north_offset", "pit_speed_limit", b"pit_speed_limit", "type", b"type"]) -> None: ...

global___Track = Track

@typing.final
class TrackConfig(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    TRACK_ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    LENGTH_FIELD_NUMBER: builtins.int
    LENGTH_OFFICIAL_FIELD_NUMBER: builtins.int
    NUM_TURNS_FIELD_NUMBER: builtins.int
    DIRECTION_FIELD_NUMBER: builtins.int
    id: builtins.str
    """`id` is a compound key that we generate when processing IBT files"""
    track_id: builtins.int
    """Reference to `Track::id`"""
    name: builtins.str
    """`WeekendInfo::trackConfigName`"""
    length: builtins.str
    length_official: builtins.str
    num_turns: builtins.int
    direction: builtins.str
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        track_id: builtins.int = ...,
        name: builtins.str = ...,
        length: builtins.str = ...,
        length_official: builtins.str = ...,
        num_turns: builtins.int = ...,
        direction: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["direction", b"direction", "id", b"id", "length", b"length", "length_official", b"length_official", "name", b"name", "num_turns", b"num_turns", "track_id", b"track_id"]) -> None: ...

global___TrackConfig = TrackConfig
